---

# killvbox & removevms

# make sure first to setup vboxnet0 to prevent errors. It's not persistent between reboots.
# TODO: Iptables
- name: Setup vboxnet0
  command: vmcloak-vboxnet0
  become: true

#Todo
- name: setup networking
  shell: >
    iptables -F ;
    iptables -t nat -F ;
    iptables -t nat -A POSTROUTING -o ens33 -s "192.168.56.0/24" -j MASQUERADE ;
    iptables -P FORWARD DROP ;
    iptables -A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT ;
    iptables -A FORWARD -s "192.168.56.0/24" -j ACCEPT ;
    iptables -A FORWARD -s 192.168.56.0/24 -d 192.168.56.0/24 -j ACCEPT ;
    iptables -A FORWARD -j LOG ;
    echo 1 > /proc/sys/net/ipv4/ip_forward ;
  become: true
  when: ansible_distribution == 'Ubuntu'


# TODO: Fix resolution
- name: Generate VM templates
  command: >
    vmcloak init
    --{{ machines[item].VMCloack.windows_version }}
     --iso-mount {{ machines[item].VMCloack.iso_mount }}
     --serial-key {{ machines[item].VMCloack.serial_key }}
     --ip {{ machines[item].ip }}
     --port {{ machines[item].resultserver_port }}
     --adapter {{ machines[item].VMCloack.hostonly_adapter }}
     --netmask {{ machines[item].netmask }}
     --gateway {{ machines[item].VMCloack.gateway }}
     --dns {{ machines[item].VMCloack.dns }}
     --cpus {{ machines[item].VMCloack.cpus }}
     --ramsize {{ machines[item].VMCloack.ramsize }}
    {{ machines[item].VMCloack.template_name }}
  with_items: "{{machines}}"
  when: machines[item].VMCloack is defined
  become_user: cuckoo
  become: true
  args:
    creates: ~/.vmcloak/image/{{ machines[item].VMCloack.template_name }}.vdi

# - name: Fill vm's with dependencies
#   command: "vmcloak install {{ machines[item].VMCloack.template_name }} {{ machines[item].VMCloack.dependencies }}"
#   become_user: cuckoo
#   become: true
#   with_items: "{{machines}}"
#   when: machines[item].VMCloack is defined
